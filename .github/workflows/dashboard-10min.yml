name: dashboard-10min

on:
  workflow_dispatch: {}
  # schedule:
  #   - cron: "*/10 13-19 * * 1-5"
  #   - cron: "0 20 * * 1-5"

concurrency:
  group: data-writes-10min
  cancel-in-progress: true

jobs:
  tenmin:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      TZ: America/New_York
      LIVE_BRANCH: data-live-10min
      ARCHIVE_BRANCH: data-archive

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Sync refs
        run: |
          git fetch origin +refs/heads/*:refs/remotes/origin/*

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install jq

      # ---- Build (intraday) ----
      - name: Build outlook source (intraday)
        env:
          POLYGON_API_KEY: ${{ secrets.POLYGON_API_KEY }}
        run: |
          set -euo pipefail
          python scripts/build_outlook_source_from_polygon.py --mode intraday

      - name: Make dashboard payload (intraday)
        run: |
          set -euo pipefail
          python scripts/make_dashboard.py --mode intraday --source data/outlook_source.json --out data/outlook_intraday.json

      - name: Write heartbeat_10min
        run: |
          mkdir -p data
          date -u +'%Y-%m-%dT%H:%M:%SZ' > data/heartbeat_10min.txt

      - name: Stage files for publish
        id: prep
        run: |
          set -e
          TS=$(date -u +'%Y-%m-%dT%H-%M-%SZ')
          # temp staging (survives branch switches)
          mkdir -p /tmp/live10 /tmp/archive/source /tmp/archive/dashboard
          # live "latest"
          cp data/outlook_intraday.json /tmp/live10/
          cp data/outlook_source.json   /tmp/live10/
          cp data/heartbeat_10min.txt   /tmp/live10/
          # archive snapshots
          cp data/outlook_source.json   "/tmp/archive/source/outlook_source_${TS}.json"
          cp data/outlook_intraday.json "/tmp/archive/dashboard/outlook_intraday_${TS}.json"
          echo "ts=$TS" >> "$GITHUB_OUTPUT"

      # ---- Publish LIVE (force-push) ----
      - name: Push LIVE branch (10min)
        run: |
          set -e
          git config user.name  "actions-user"
          git config user.email "actions@github.com"
          # switch/create live branch with a clean tree
          if git show-ref --verify --quiet refs/heads/"$LIVE_BRANCH"; then
            git checkout "$LIVE_BRANCH"
          else
            git checkout --orphan "$LIVE_BRANCH"
          fi
          git rm -rf . || true
          mkdir -p data
          cp /tmp/live10/* data/
          git add data
          git commit -m "10MIN live: $(date -u +'%Y-%m-%dT%H:%M:%SZ')"
          git push origin +HEAD:"$LIVE_BRANCH"

      # ---- Append to ARCHIVE (shared) ----
      - name: Push ARCHIVE branch (append)
        run: |
          set -e
          if git show-ref --verify --quiet refs/heads/"$ARCHIVE_BRANCH"; then
            git checkout "$ARCHIVE_BRANCH"
          else
            git checkout --orphan "$ARCHIVE_BRANCH"
          fi
          git pull --rebase origin "$ARCHIVE_BRANCH" || true
          mkdir -p data/archive/10min/source data/archive/10min/dashboard
          cp /tmp/archive/source/*    data/archive/10min/source/    || true
          cp /tmp/archive/dashboard/* data/archive/10min/dashboard/ || true
          git add data/archive/10min || true
          git commit -m "10MIN archive: ${{ steps.prep.outputs.ts }}" || echo "nothing to commit"
          git push origin HEAD:"$ARCHIVE_BRANCH"

      - name: Return to main (optional)
        run: |
          git checkout -f main || true
