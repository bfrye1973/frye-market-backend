name: dashboard-build

on:
  workflow_dispatch:   # allow manual runs
  schedule:
    # Autoschedule (Mon–Fri): 9:45a, 12:00p, 3:00p, 4:05p Eastern
    # We include both EDT (UTC-4) and EST (UTC-5) so it works year-round.
    - cron: "45 13 * * 1-5"   # 09:45 AM EDT
    - cron: "45 14 * * 1-5"   # 09:45 AM EST
    - cron: "0 16 * * 1-5"    # 12:00 PM EDT
    - cron: "0 17 * * 1-5"    # 12:00 PM EST
    - cron: "0 19 * * 1-5"    # 03:00 PM EDT
    - cron: "0 20 * * 1-5"    # 03:00 PM EST
    - cron: "5 20 * * 1-5"    # 04:05 PM EDT (after close)
    - cron: "5 21 * * 1-5"    # 04:05 PM EST (after close)

jobs:
  eod:
    runs-on: ubuntu-latest
    env:
      TZ: America/New_York

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Build outlook source (daily)
        env:
          POLYGON_API_KEY: ${{ secrets.POLYGON_API_KEY }}
        run: |
          python scripts/build_outlook_source_from_polygon.py --mode daily

      - name: Make dashboard payload
        env:
          PIPELINE_TAG: "eod"
        run: |
          python scripts/make_dashboard.py --source data/outlook_source.json --out data/outlook.json

      - name: Archive (15-day rolling) — EOD
        run: |
          set -e
          TS=$(date -u +'%Y-%m-%dT%H-%M-%SZ')
          mkdir -p data/archive/eod/source data/archive/eod/dashboard
          cp data/outlook_source.json "data/archive/eod/source/outlook_source_${TS}.json"
          cp data/outlook.json        "data/archive/eod/dashboard/outlook_${TS}.json"
          # prune >15 days old
          find data/archive/eod/source    -type f -name 'outlook_source_*.json' -mtime +15 -delete || true
          find data/archive/eod/dashboard -type f -name 'outlook_*.json'        -mtime +15 -delete || true

      - name: Commit latest + EOD archive (if changed)
        run: |
          git config user.name  "github-actions"
          git config user.email "actions@github.com"
          git add data/outlook.json data/outlook_source.json data/archive/eod || true
          git diff --staged --quiet && echo "No changes" || git commit -m "EOD refresh & archive: $(date -u +'%Y-%m-%dT%H:%M:%SZ')"
          git push || true

      # Optional: auto-redeploy backend
      - name: Trigger Render backend deploy
        env:
          RENDER_DEPLOY_HOOK_URL: ${{ secrets.RENDER_DEPLOY_HOOK_URL }}
        run: |
          if [ -n "$RENDER_DEPLOY_HOOK_URL" ]; then
            echo "Triggering Render deploy..."
            curl -s -X POST "$RENDER_DEPLOY_HOOK_URL" >/dev/null || true
          else
            echo "No RENDER_DEPLOY_HOOK_URL configured; skipping."
          fi
