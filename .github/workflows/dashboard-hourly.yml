name: dashboard-hourly

on:
  workflow_dispatch:
  # 08:30–17:30 ET => 12:30–21:30 UTC, every hour Mon–Fri
  schedule:
    - cron: "30 12-21 * * 1-5"

jobs:
  hourly:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      TZ: America/New_York

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - name: Setup Python
        uses: actions/setup-python@v5
        with: { python-version: "3.11" }

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install jq

      # Ensure we never re-archive stale files
      - name: Clean previous payloads
        run: |
          rm -f data/outlook_source.json data/outlook.json || true
          mkdir -p data

      - name: Build outlook source (intraday)
        env:
          POLYGON_API_KEY: ${{ secrets.POLYGON_API_KEY }}
        run: |
          set -euo pipefail
          python scripts/build_outlook_source_from_polygon.py --mode intraday

      - name: Make dashboard payload (intraday)
        run: |
          set -euo pipefail
          python scripts/make_dashboard.py --mode intraday --source data/outlook_source.json --out data/outlook.json

      - name: Verify freshness (hard guard)
        run: |
          set -euo pipefail
          echo "UTC now: $(date -u +'%Y-%m-%dT%H:%M:%SZ')"
          test -f data/outlook_source.json && test -f data/outlook.json
          echo "source.ts:" && jq -r '.timestamp // .ts // .updated_at // "MISSING"' data/outlook_source.json
          echo "out.ts:"    && jq -r '.ts // .updated_at // "MISSING"' data/outlook.json
          if jq -e '(.timestamp // .ts // .updated_at // "") | startswith("2025-09-11")' data/outlook_source.json >/dev/null; then
            echo "::error ::Builder wrote stale timestamp (still 2025-09-11). Failing run."; exit 1
          fi

      - name: Write heartbeat (force diff)
        run: |
          mkdir -p data
          date -u +'%Y-%m-%dT%H:%M:%SZ' > data/heartbeat.txt

      - name: Archive (15-day rolling)
        run: |
          set -e
          TS=$(date -u +'%Y-%m-%dT%H-%M-%SZ')
          mkdir -p data/archive/hourly/source data/archive/hourly/dashboard
          cp data/outlook_source.json "data/archive/hourly/source/outlook_source_${TS}.json"
          cp data/outlook.json        "data/archive/hourly/dashboard/outlook_${TS}.json"
          find data/archive/hourly/source    -type f -name 'outlook_source_*.json' -mtime +15 -delete || true
          find data/archive/hourly/dashboard -type f -name 'outlook_*.json'        -mtime +15 -delete || true

      - name: Commit latest + archive (force-safe)
        run: |
          set -e
          git config user.name  "github-actions"
          git config user.email "actions@github.com"
          git fetch origin main
          git checkout main
          git reset --hard origin/main
          git add -A
          git commit -m "HOURLY refresh & archive: $(date -u +'%Y-%m-%dT%H-%M-%SZ')" || git commit --allow-empty -m "HOURLY keepalive: $(date -u +'%Y-%m-%dT%H-%M-%SZ')"
          git push origin HEAD:main
          git rev-parse HEAD
