name: dashboard-hourly

on:
  workflow_dispatch:
  # 08:30–17:30 ET => 12:30–21:30 UTC, every hour Mon–Fri (run at :05 past)
  schedule:
    - cron: "5 13-21 * * 1-5"

# Concurrency ONLY for hourly (doesn't block 10-min)
concurrency:
  group: data-writes-hourly
  cancel-in-progress: true

jobs:
  hourly:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      TZ: America/New_York

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Sync repo state
        run: |
          git fetch origin main
          git checkout main
          git reset --hard origin/main

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install jq

      - name: Build outlook source (intraday)
        env:
          POLYGON_API_KEY: ${{ secrets.POLYGON_API_KEY }}
        run: |
          set -euo pipefail
          python scripts/build_outlook_source_from_polygon.py --mode intraday

      # Write HOURLY file (no more outlook.json overlap)
      - name: Make dashboard payload (intraday → hourly view)
        run: |
          set -euo pipefail
          python scripts/make_dashboard.py --mode intraday --source data/outlook_source.json --out data/outlook_hourly.json

      # Hourly heartbeats
      - name: Write heartbeat_hourly (+ legacy heartbeat.txt)
        run: |
          mkdir -p data
          TS=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
          echo "$TS" > data/heartbeat_hourly.txt
          echo "$TS" > data/heartbeat.txt   # legacy global stamp (only hourly writes this)

      - name: Archive (15-day rolling)
        run: |
          set -e
          TS=$(date -u +'%Y-%m-%dT%H-%M-%SZ')
          mkdir -p data/archive/hourly/source data/archive/hourly/dashboard
          cp data/outlook_source.json   "data/archive/hourly/source/outlook_source_${TS}.json"
          cp data/outlook_hourly.json   "data/archive/hourly/dashboard/outlook_hourly_${TS}.json"
          find data/archive/hourly/source    -type f -name 'outlook_source_*.json' -mtime +15 -delete || true
          find data/archive/hourly/dashboard -type f -name 'outlook_hourly_*.json'  -mtime +15 -delete || true

      - name: Show files before commit
        run: |
          echo "--- data/ ---"; ls -l data/ || true
          echo "--- outlook_hourly.json (head) ---"; head -n 1 data/outlook_hourly.json || true
          echo "--- outlook_source.json (head) ---"; head -n 1 data/outlook_source.json || true
          echo "--- heartbeat_hourly.txt ---"; cat data/heartbeat_hourly.txt || true
          echo "--- heartbeat.txt (legacy) ---"; cat data/heartbeat.txt || true

      - name: Commit & push (retry-safe)
        run: |
          set -e
          git config user.name  "github-actions"
          git config user.email "actions@github.com"
          git add data/heartbeat_hourly.txt data/heartbeat.txt || true
          git add data/outlook_hourly.json data/outlook_source.json || true
          git add data/archive/hourly || true
          git commit -m "HOURLY refresh & archive: $(date -u +'%Y-%m-%dT%H:%M:%SZ')" || git commit --allow-empty -m "HOURLY keepalive"

          for attempt in 1 2 3; do
            if git push origin HEAD:main; then
              echo "Push succeeded on attempt $attempt"; break
            fi
            echo "Push rejected; syncing with origin/main (attempt $attempt)..."
            git fetch origin main
            git rebase origin/main || true
          done
