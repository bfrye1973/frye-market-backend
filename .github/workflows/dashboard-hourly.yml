name: dashboard-hourly

on:
  schedule:
    # 09:30–16:30 ET (13:30–20:30 UTC), Mon–Fri
    - cron: "30 13-20 * * 1-5"
  workflow_dispatch:

concurrency:
  group: dashboard-hourly
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  hourly:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install minimal deps (safe if requirements.txt is missing)
        run: |
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            python -m pip install --upgrade pip
            pip install -q requests pandas || true
          fi

      # -------- FETCH --------
      - name: Fetch raw data (Polygon → outlook_source.json)
        env:
          POLYGON_API_KEY: ${{ secrets.POLYGON_API_KEY }}
        run: |
          if [ -f scripts/build_outlook_source_from_polygon.py ]; then
            python -u scripts/build_outlook_source_from_polygon.py --mode intraday
          else
            echo "❌ scripts/build_outlook_source_from_polygon.py missing"; exit 1
          fi

      - name: Log outlook_source summary
        run: |
          if [ -f data/outlook_source.json ]; then
            echo "timestamp: $(jq -r '.timestamp // "missing"' data/outlook_source.json)"
            echo "groups count: $(jq -r '[.groups | keys[]] | length' data/outlook_source.json 2>/dev/null || echo 0)"
            echo "file size:"; ls -lh data/outlook_source.json
          else
            echo "❌ data/outlook_source.json missing"; exit 1
          fi

      - name: Guard: require fresh outlook_source.json (≥5 groups)
        run: |
          test -f data/outlook_source.json || (echo "❌ missing outlook_source.json"; exit 1)
          n=$(jq -r '[.groups | keys[]] | length' data/outlook_source.json 2>/dev/null || echo 0)
          if [ "$n" -lt 5 ]; then
            echo "❌ Too few groups ($n). Aborting build."; exit 1
          fi

      # -------- BUILD --------
      - name: Make dashboard (intraday)
        run: |
          if [ -f scripts/make_dashboard.py ]; then
            python -u scripts/make_dashboard.py --mode intraday --source data/outlook_source.json --out data/outlook.json
          else
            echo "❌ scripts/make_dashboard.py missing"; exit 1
          fi

      # -------- VALIDATE --------
      - name: Ensure outlook.json exists
        run: test -f data/outlook.json

      - name: Validate outlook.json (no conflict markers; valid JSON)
        run: |
          if grep -E '<<<<<<<|=======|>>>>>>>' -n data/outlook.json; then
            echo "❌ Conflict markers found in data/outlook.json"; exit 1
          fi
          jq . data/outlook.json > /dev/null

      - name: Summarize outlook.json
        run: |
          echo "sectorCards length: $(jq -r '.outlook.sectorCards | length' data/outlook.json 2>/dev/null || echo 0)"
          echo "updated_at: $(jq -r '.updated_at // "missing"' data/outlook.json)"

      # -------- ARCHIVE + COMMIT --------
      - name: Archive (15-day rolling) — HOURLY
        run: |
          mkdir -p archive/hourly
          ts=$(date -u +%Y-%m-%dT%H-%M-%SZ)
          cp data/outlook.json archive/hourly/outlook_${ts}.json || true
          if [ -f data/outlook_source.json ]; then
            cp data/outlook_source.json archive/hourly/outlook_source_${ts}.json || true
          fi
          ls -1t archive/hourly/outlook_*.json 2>/dev/null | tail -n +361 | xargs -r rm -f
          ls -1t archive/hourly/outlook_source_*.json 2>/dev/null | tail -n +361 | xargs -r rm -f

      - name: Commit latest → hourly archive (rebase-safe)
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add -A || true
          git diff --staged --quiet || git commit -m "Hourly: refresh outlook.json [skip ci]" || true
          git pull --rebase origin main || true
          git push origin HEAD:main || true
