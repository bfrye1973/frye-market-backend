name: dashboard-hourly

on:
  workflow_dispatch: {}
  schedule:
    - cron: "*/5 * * * 1-5"   # Every 5 minutes (UTC)

defaults:
  run:
    shell: bash

jobs:
  hourly:
    name: Build & Publish Hourly (1h context)
    runs-on: ubuntu-latest
    timeout-minutes: 25
    permissions:
      contents: write
    concurrency:
      group: dashboard-hourly
      cancel-in-progress: true           # keep freshest 1h run
    env:
      TZ: America/Phoenix
      LIVE_BRANCH: data-live-hourly
      PYTHONUNBUFFERED: "1"
      FD_MAX_WORKERS: "16"
      FD_RETRY_MAX: "0"

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with: { fetch-depth: 1 }

      # (No pip install â€” use stdlib only)

      - name: Build hourly payload (long lookbacks live here)
        env:
          POLYGON_API_KEY: ${{ secrets.POLYGON_API_KEY }}
          FD_MAX_WORKERS:   ${{ env.FD_MAX_WORKERS }}
          FD_RETRY_MAX:     ${{ env.FD_RETRY_MAX }}
        run: |
          set -euo pipefail
          mkdir -p data
          python -u scripts/make_dashboard_hourly.py --out data/outlook_hourly.json
          # optional: head -n 40 data/outlook_hourly.json || true

      - name: Write heartbeat
        run: |
          set -euo pipefail
          date -u +"%Y-%m-%dT%H:%M:%SZ" > data/heartbeat_1h

      - name: Detect change vs remote
        id: changed
        env:
          LIVE_BRANCH: ${{ env.LIVE_BRANCH }}
        run: |
          set -euo pipefail
          CHG="true"
          if git ls-remote --exit-code --heads origin "${LIVE_BRANCH}" >/dev/null 2>&1; then
            git fetch origin "${LIVE_BRANCH}:${LIVE_BRANCH}"
            git show "origin/${LIVE_BRANCH}:data/outlook_hourly.json" > /tmp/prev.json || true
            if [ -s /tmp/prev.json ] && diff -q data/outlook_hourly.json /tmp/prev.json >/dev/null 2>&1; then
              CHG="false"
            fi
          fi
          echo "changed=${CHG}" >> "$GITHUB_OUTPUT"
          echo "[diff] changed=${CHG}"

      - name: Publish live branch (safe)
        if: ${{ steps.changed.outputs.changed == 'true' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}
          LIVE_BRANCH: ${{ env.LIVE_BRANCH }}
        run: |
          set -euo pipefail
          git config user.email "bot@ci.local"
          git config user.name  "CI Bot"
          git add data/outlook_hourly.json data/heartbeat_1h || true
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "hourly publish: $(date -u +'%Y-%m-%dT%H:%M:%SZ')"
            git remote set-url origin "https://x-access-token:${GITHUB_TOKEN}@github.com/${REPO}.git"
            git push origin HEAD:refs/heads/${LIVE_BRANCH} --force
          fi

      - name: Done
        run: echo "Hourly publish complete"
