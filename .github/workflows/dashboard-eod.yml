name: dashboard-eod

on:
  workflow_dispatch: {}
  schedule:
    # Run once daily at 9:10 PM UTC (â‰ˆ 4:10 PM ET / 1:10 PM PT)
    - cron: "10 21 * * 1-5"

defaults:
  run:
    shell: bash

jobs:
  build_and_publish_eod:
    name: Build and Publish EOD
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      contents: write
    env:
      TZ: America/Phoenix
      LIVE_BRANCH: data-live-eod
      PYTHONUNBUFFERED: "1"

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          set -euo pipefail
          python -m pip install --upgrade pip
          pip install requests python-dateutil

      - name: Build sectorCards source (daily)
        env:
          POLYGON_API_KEY: ${{ secrets.POLYGON_API_KEY }}
        run: |
          set -euo pipefail
          mkdir -p data
          python -u scripts/build_outlook_source_from_polygon.py --mode daily --out data/outlook_source.json
          echo "----- RAW SOURCE (first 80 lines) -----"
          head -n 80 data/outlook_source.json || true

      - name: Normalize sectorCards source
        run: |
          set -euo pipefail
          python - <<'PY'
          import json
          p="data/outlook_source.json"
          j=json.load(open(p,"r",encoding="utf-8"))
          cards=j.get("sectorCards") or []
          if not cards and "groups" in j:
              # minimal fallback if groups exist
              def pct(a,b): return 0.0 if b<=0 else 100.0*a/b
              by={}
              for k,g in j["groups"].items():
                  nh,nl,u,d=[int(g.get(x,0)) for x in("nh","nl","u","d")]
                  b=pct(nh,nh+nl); m=pct(u,u+d)
                  by[k.lower()]={"sector":k.title(),"breadth_pct":round(b,2),"momentum_pct":round(m,2),"nh":nh,"nl":nl,"up":u,"down":d}
              cards=list(by.values())
          json.dump({"sectorCards":cards},open(p,"w",encoding="utf-8"),ensure_ascii=False,indent=2)
          print(f"[normalize] sectorCards={len(cards)}")
          PY

      - name: Validate sectorCards source
        run: |
          set -euo pipefail
          python - <<'PY'
          import json,sys
          j=json.load(open("data/outlook_source.json"))
          cards=j.get("sectorCards") or []
          need=("sector","breadth_pct","momentum_pct","nh","nl","up","down")
          if len(cards)!=11 or not all(k in cards[0] for k in need):
              print(f"[sectors] INVALID source: cards={len(cards)} need={need}")
              sys.exit(2)
          print(f"[sectors] OK cards=11 | {cards[0]['sector']} breadth={cards[0]['breadth_pct']} momentum={cards[0]['momentum_pct']}")
          PY

      - name: Build EOD payload
        env:
          POLYGON_API_KEY: ${{ secrets.POLYGON_API_KEY }}
        run: |
          set -euo pipefail
          python -u scripts/make_eod.py \
            --source data/outlook_source.json \
            --out    data/outlook.json
       - name: Mirror to legacy daily block (trendDaily.*)
        run: |
          set -euo pipefail
          python -u scripts/finalize_eod_legacy_mirror.py \
            --in  data/outlook.json \
            --out data/outlook.json

      - name: Write heartbeat
        run: |
          set -euo pipefail
          date -u +'%Y-%m-%dT%H:%M:%SZ' > data/heartbeat_eod.txt

      - name: Stage artifacts
        run: |
          set -euo pipefail
          mkdir -p /tmp/eod
          cp -f data/outlook.json /tmp/eod/outlook.json
          cp -f data/heartbeat_eod.txt /tmp/eod/heartbeat_eod.txt

      - name: Prepare live branch
        run: |
          set -euo pipefail
          git config user.name "actions-bot"
          git config user.email "bot@users.noreply.github.com"
          git reset --hard
          git clean -fdx
          if git ls-remote --exit-code --heads origin "${LIVE_BRANCH}" >/dev/null 2>&1; then
            git fetch origin "${LIVE_BRANCH}"
            git checkout -B "${LIVE_BRANCH}" "origin/${LIVE_BRANCH}"
          else
            git checkout --orphan "${LIVE_BRANCH}"
          fi
          find . -mindepth 1 -maxdepth 1 ! -name ".git" -exec rm -rf {} +
          mkdir -p data
          cp -f /tmp/eod/outlook.json data/outlook.json
          cp -f /tmp/eod/heartbeat_eod.txt data/heartbeat_eod.txt

      - name: Commit and push live branch
        run: |
          set -euo pipefail
          git add data
          git commit -m "EOD live $(date -u +'%Y-%m-%dT%H:%M:%SZ')" || echo "nothing to commit"
          git push origin "${LIVE_BRANCH}" --force
